/**
 * quantimodo
 * QuantiModo makes it easy to retrieve normalized user data from a wide array of devices and applications. [Learn about QuantiModo](https://quantimo.do), check out our [docs](https://github.com/QuantiModo/docs) or contact us at [help.quantimo.do](https://help.quantimo.do).
 *
 * OpenAPI spec version: 5.8.728
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export interface TrackingReminderNotification {
    /**
     * id for the specific PENDING tracking remidner
     */
    id: number;

    /**
     * id for the repeating tracking remidner
     */
    trackingReminderId?: number;

    /**
     * clientId
     */
    clientId?: string;

    /**
     * ID of User
     */
    userId?: number;

    /**
     * Id for the variable to be tracked
     */
    variableId?: number;

    /**
     * Default value to use for the measurement when tracking
     */
    defaultValue?: number;

    /**
     * String identifier for the sound to accompany the reminder
     */
    reminderSound?: string;

    /**
     * True if the reminders should appear as a popup notification
     */
    popUp?: boolean;

    /**
     * True if the reminders should be delivered via SMS
     */
    sms?: boolean;

    /**
     * True if the reminders should be delivered via email
     */
    email?: boolean;

    /**
     * True if the reminders should appear in the notification bar
     */
    notificationBar?: boolean;

    /**
     * When the record in the database was last updated. Use UTC ISO 8601 `YYYY-MM-DDThh:mm:ss`  datetime format. Time zone should be UTC and not local.
     */
    updatedAt?: Date;

    /**
     * Name of the variable to be used when sending measurements
     */
    variableName?: string;

    /**
     * Name of the variable category to be used when sending measurements
     */
    variableCategoryName?: string;

    /**
     * Abbreviated name of the unit to be used when sending measurements
     */
    unitAbbreviatedName?: string;

    /**
     * The way multiple measurements are aggregated over time
     */
    combinationOperation?: TrackingReminderNotification.CombinationOperationEnum;

    /**
     * How often user should be reminded in seconds. Example: 86400
     */
    reminderFrequency?: number;

    /**
     * Earliest time of day at which reminders should appear in UTC HH:MM:SS format
     */
    reminderStartTime?: string;

    /**
     * Example: 2017-07-29 20:49:54
     */
    createdAt?: Date;

    /**
     * Example: 5072482
     */
    trackingReminderNotificationId?: number;

    /**
     * UTC ISO 8601 `YYYY-MM-DDThh:mm:ss` timestamp for the specific time the variable should be tracked in UTC.  This will be used for the measurement startTime if the track endpoint is used.
     */
    reminderTime?: Date;

    /**
     * UTC ISO 8601 `YYYY-MM-DDThh:mm:ss` timestamp for the specific time the variable should be tracked in UTC.  This will be used for the measurement startTime if the track endpoint is used.
     */
    trackingReminderNotificationTime?: Date;

    /**
     * Example: 10
     */
    defaultUnitId?: number;

    /**
     * Example: positive
     */
    description?: string;

    /**
     * Example: 1
     */
    variableCategoryId?: number;

    /**
     * Example: positive
     */
    valence?: string;

    /**
     * Example: 3
     */
    mostCommonValue?: number;

    /**
     * Example: 4
     */
    secondMostCommonValue?: number;

    /**
     * Example: 2
     */
    thirdMostCommonValue?: number;

    /**
     * Example: 3
     */
    lastValue?: number;

    /**
     * Example: 1
     */
    secondToLastValue?: number;

    /**
     * Example: 2
     */
    thirdToLastValue?: number;

    /**
     * Example: 10
     */
    userVariableDefaultUnitId?: number;

    /**
     * Example: 1
     */
    userVariableVariableCategoryId?: number;

    /**
     * Example: 5
     */
    numberOfUniqueValues?: number;

    /**
     * Example: ion-happy-outline
     */
    ionIcon?: string;

    /**
     * Example: https://app.quantimo.do/ionic/Modo/www/img/variable_categories/emotions.svg
     */
    svgUrl?: string;

    /**
     * Example: https://app.quantimo.do/ionic/Modo/www/img/variable_categories/emotions.png
     */
    pngUrl?: string;

    /**
     * Example: img/variable_categories/emotions.png
     */
    pngPath?: string;

    /**
     * Example: https://maxcdn.icons8.com/Color/PNG/96/Cinema/theatre_mask-96.png
     */
    variableCategoryImageUrl?: string;

    /**
     * Example: 1
     */
    manualTracking?: boolean;

    /**
     * Example: Emotions
     */
    userVariableVariableCategoryName?: string;

    /**
     * Example: 1501534124
     */
    trackingReminderNotificationTimeEpoch?: number;

    /**
     * Example: 15:48:44
     */
    trackingReminderNotificationTimeLocal?: string;

    /**
     * Example: 3
     */
    lastValueInUserVariableDefaultUnit?: number;

    /**
     * Example: 1
     */
    secondToLastValueInUserVariableDefaultUnit?: number;

    /**
     * Example: 2
     */
    thirdToLastValueInUserVariableDefaultUnit?: number;

    /**
     * Example: 3
     */
    mostCommonValueInUserVariableDefaultUnit?: number;

    /**
     * Example: 4
     */
    secondMostCommonValueInUserVariableDefaultUnit?: number;

    /**
     * Example: 2
     */
    thirdMostCommonValueInUserVariableDefaultUnit?: number;

    /**
     * Example: 10
     */
    unitId?: number;

    /**
     * Example: 1 to 5 Rating
     */
    unitName?: string;

    /**
     * Example: 5
     */
    unitCategoryId?: number;

    /**
     * Example: Rating
     */
    unitCategoryName?: string;

    /**
     * Example: 1 to 5 Rating
     */
    defaultUnitName?: string;

    /**
     * Example: /5
     */
    defaultUnitAbbreviatedName?: string;

    /**
     * Example: 5
     */
    defaultUnitCategoryId?: number;

    /**
     * Example: Rating
     */
    defaultUnitCategoryName?: string;

    /**
     * Example: 1 to 5 Rating
     */
    userVariableDefaultUnitName?: string;

    /**
     * Example: /5
     */
    userVariableDefaultUnitAbbreviatedName?: string;

    /**
     * Example: 5
     */
    userVariableDefaultUnitCategoryId?: number;

    /**
     * Example: Rating
     */
    userVariableDefaultUnitCategoryName?: string;

    /**
     * Example: 1
     */
    minimumAllowedValue?: number;

    /**
     * Example: 5
     */
    maximumAllowedValue?: number;

    /**
     * Example: happiestFaceIsFive
     */
    inputType?: string;

    /**
     * Example: 3
     */
    total?: number;

    /**
     * Example: Rate Overall Mood
     */
    title?: string;

}
export namespace TrackingReminderNotification {
    export enum CombinationOperationEnum {
        MEAN = <any> 'MEAN',
        SUM = <any> 'SUM'
    }
}
