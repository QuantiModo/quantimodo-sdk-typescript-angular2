/**
 * QuantiModo
 * QuantiModo makes it easy to retrieve normalized user data from a wide array of devices and applications. [Learn about QuantiModo](https://quantimo.do), check out our [docs](https://github.com/QuantiModo/docs) or contact us at [help.quantimo.do](https://help.quantimo.do). 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import * as models from './models';

export interface Measurement {
    /**
     * Name of the variable for which we are creating the measurement records
     */
    variableName: string;

    /**
     * Application or device used to record the measurement values
     */
    sourceName: string;

    /**
     * Start Time for the measurement event in UTC ISO 8601 \"YYYY-MM-DDThh:mm:ss\"
     */
    startTimeString: string;

    /**
     * Seconds between the start of the event measured and 1970 (Unix timestamp)
     */
    startTimeEpoch?: number;

    humanTime?: models.HumanTime;

    /**
     * Converted measurement value in requested unit
     */
    value: number;

    /**
     * Original value as originally submitted
     */
    originalValue?: number;

    /**
     * Original Unit of measurement as originally submitted
     */
    originalunitAbbreviatedName?: string;

    /**
     * Abbreviated name for the unit of measurement
     */
    unitAbbreviatedName: string;

    /**
     * Note of measurement
     */
    note?: string;

}
